name: Release Editor for PC

on:
  push:
    branches:
      - main

jobs:
  version_check_and_tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Get current version
        id: get_version
        run: echo "version=$(cargo metadata --format-version 1 | jq -r '.packages[] | select(.name == \"I3M-Engine-Core\").version')" >> $GITHUB_ENV

      - name: Get latest tag
        id: get_latest_tag
        run: echo "latest_tag=$(git describe --tags --abbrev=0 || echo 'v0.0.0')" >> $GITHUB_ENV

      - name: Compare versions and tag
        run: |
          if [ "$(printf '%s\n' "$version" "$latest_tag" | sort -V | head -n1)" != "$version" ]; then
            git config user.name "GitHub Actions"
            git config user.email "actions@github.com"
            git tag "v$version"
            git push origin "v$version"
          fi
        env:
          version: ${{ env.version }}
          latest_tag: ${{ env.latest_tag }}

  release_pc:
    name: Release Editors (PC)
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2

      - name: Install Linux dependencies
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: sudo apt-get update && sudo apt-get install -y libasound2-dev

      - name: Build I3M-Engine-Core
        run: cargo build --release --package I3M-Engine-Core

      - name: Build i3m_engine_core_base
        run: cargo build --release --package i3m_engine_core_base

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_PERSONAL_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload I3M-Engine-Core Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_PERSONAL_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/release/I3M-Engine-Core
          asset_name: I3M-Engine-Core-${{ matrix.os }}
          asset_content_type: application/octet-stream

      - name: Upload i3m_engine_core_base Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_PERSONAL_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/release/i3m_engine_core_base
          asset_name: i3m_engine_core_base-${{ matrix.os }}
          asset_content_type: application/octet-stream
