name: Publish Crates

on:
  push:
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Set up Cargo registry
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: |
          mkdir -p ~/.cargo
          echo "[registry]" > ~/.cargo/config.toml
          echo "token = \"$CARGO_REGISTRY_TOKEN\"" >> ~/.cargo/config.toml

      - name: Detect crate changes
        id: detect_changes
        run: |
          touch crates_to_publish.txt
          for member in $(cargo metadata --format-version 1 | jq -r '.workspace_members[]' | cut -d ' ' -f 1 | sed 's|path+file://||g' | cut -d '#' -f 1); do
            if git diff --exit-code --quiet HEAD^..HEAD -- "$member"; then
              echo "No changes in $member"
            else
              echo "Changes detected in $member"
              echo "$member" >> crates_to_publish.txt
            fi
          done
        shell: bash

      - name: Check version changes and prepare publishing
        id: version_check
        run: |
          if [ ! -s crates_to_publish.txt ]; then
            echo "No crates to publish"
            exit 0
          fi

          touch crates_to_update.txt

          while read -r crate; do
            cd "$crate" || exit 1
            current_version=$(cargo metadata --manifest-path Cargo.toml --no-deps --format-version 1 | jq -r '.packages[0].version')
            previous_version=$(git show HEAD^:"$crate"/Cargo.toml | grep '^version = ' | cut -d '"' -f 2)

            if [ "$current_version" != "$previous_version" ]; then
              echo "Version change detected in $crate: $previous_version -> $current_version"
              echo "$crate" >> ../crates_to_update.txt
            else
              echo "No version change in $crate"
            fi
            cd - || exit 1
          done < crates_to_publish.txt
        shell: bash

      - name: Publish crates
        if: steps.version_check.outputs.success != 'false'
        run: |
          while read -r crate; do
            cd "$crate" || exit 1
            cargo publish
            cd - || exit 1
          done < crates_to_update.txt
        shell: bash

      - name: Update dependent crates
        if: steps.version_check.outputs.success != 'false'
        run: |
          while read -r crate; do
            current_version=$(cargo metadata --manifest-path "$crate/Cargo.toml" --no-deps --format-version 1 | jq -r '.packages[0].version')
            dependents=$(rg -l "path = \"$crate\"" .)

            for dependent in $dependents; do
              echo "Updating $dependent to use $crate@$current_version"
              sed -i "s/version = \".*\"/version = \"$current_version\"/" "$dependent/Cargo.toml"
              git add "$dependent/Cargo.toml"
            done
          done < crates_to_update.txt

          if git diff --exit-code --quiet; then
            echo "No dependent crate updates needed"
          else
            git commit -m "Update dependent crates to use latest versions"
            git push origin main
          fi
        shell: bash
